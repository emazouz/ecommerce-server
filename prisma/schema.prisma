generator client {
  provider = "prisma-client-js" // مزود عميل Prisma
}

datasource db {
  provider = "postgresql" // نوع قاعدة البيانات المستخدمة
  url      = env("DATABASE_URL") // رابط الاتصال بقاعدة البيانات من متغيرات البيئة
}

// ==============================================================================
// ENUMS - تعدادات لتحديد مجموعات من القيم الثابتة
// ==============================================================================

enum UserRole {
  USER // مستخدم عادي
  ADMIN // مسؤول
}

enum Gender {
  MEN // رجال
  WOMEN // نساء
  UNISEX // للجنسين
}

enum CartStatus {
  ACTIVE // نشطة
  PENDING // معلقة
  PAID // مدفوعة
  CANCELLED // ملغاة
}

enum PaymentStatus {
  PENDING // لم يتم الدفع بعد
  COMPLETED // تم الدفع
  FAILED // فشل الدفع
  REFUNDED // تم استرداد المبلغ
}

enum ShippingStatus {
  PENDING // لم يتم الشحن بعد
  SHIPPED // تم شحن الطلب
  DELIVERED // تم تسليم الطلب
  CANCELLED // تم إلغاء الشحن
}

enum OrderStatus {
  PENDING // الطلب قيد الانتظار
  CONFIRMED // تم تأكيد الطلب
  SHIPPED // تم شحن الطلب
  DELIVERED // تم تسليم الطلب
  CANCELLED // تم إلغاء الطلب
}

enum ShippingMethodStatus {
  STANDARD // توصيل عادي
  PICKUP // استلام من المتجر
  EXPRESS // توصيل سريع
}

enum ShipmentStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum NotificationType {
  PAYMENT
  ORDER
  REFUND
  SHIPMENT
  PROMOTION
}

enum DiscountType {
  PERCENTAGE
  FIXED
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum BannerType {
  MAIN
  PRODUCT
  SALE
  CATEGORY
  BRAND
  COUPON
  OTHER
}

enum PaymentMethod {
  COD
  CREDIT_CARD
  PAYPAL
  STRIPE
  BANK_TRANSFER
  GOOGLE_PAY
}

enum ReportType {
  SALES
  INVENTORY
  USER_ACTIVITY
}



enum JobStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum Carrier {
  DHL
  FEDEX
  UPS
  USPS
}

enum RefundReason {
  DEFECTIVE_ITEM
  WRONG_ITEM
  NOT_AS_DESCRIBED
  CUSTOMER_CHOICE
  OTHER
}

enum RefundStatus {
  PENDING
  APPROVED
  REJECTED
  PROCESSED
}

enum RefundMethod {
  ORIGINAL_PAYMENT_METHOD
  STORE_CREDIT
}


// --- تقارير العملاء ---
enum CustomerReportType {
  FEEDBACK        // تعليق أو اقتراح
  BUG_REPORT      // الإبلاغ عن خطأ أو مشكلة
  ABUSE_REPORT    // الإبلاغ عن إساءة استخدام
  PRODUCT_ISSUE   // مشكلة في المنتج
  DELIVERY_ISSUE  // مشكلة في التوصيل
  ORDER_ISSUE     // مشكلة في الطلب
  PAYMENT_ISSUE   // مشكلة في الدفع
  OTHER           // أخرى
}

// --- تقارير الموظفين ---
enum AdminReportType {
  INVENTORY_ISSUE    // مشكلة في المخزون
  SUPPLIER_ISSUE     // مشكلة مع المورد
  SYSTEM_NOTE        // ملاحظة نظام
  USER_BEHAVIOR      // سلوك المستخدم
  QUALITY_ISSUE      // مشكلة في الجودة
  OPERATIONAL_NOTE   // ملاحظة تشغيلية
  MAINTENANCE        // صيانة
  OTHER              // أخرى
}

// --- التقارير الإدارية ---
enum AnalyticalReportType {
  SALES            // تقرير المبيعات
  INVENTORY        // تقرير المخزون
  USER_ACTIVITY    // تقرير نشاط المستخدمين
  FINANCIAL        // تقرير مالي
  PERFORMANCE      // تقرير الأداء
  CUSTOMER_BEHAVIOR // سلوك العملاء
}

// --- حالة التقارير ---
enum ReportStatus {
  PENDING     // في انتظار المراجعة
  REVIEWED    // تمت المراجعة
  RESOLVED    // تم الحل
  REJECTED    // مرفوض
  OPEN        // مفتوح
  CLOSED      // مغلق
  IN_PROGRESS // قيد التنفيذ
}

// --- أولوية التقارير ---
enum ReportPriority {
  LOW     // منخفضة
  MEDIUM  // متوسطة
  HIGH    // عالية
  URGENT  // عاجلة
}

enum FileFormat {
  JSON
  CSV
  PDF
  EXCEL
  HTML
}


// ==============================================================================
// MODELS - نماذج البيانات
// ==============================================================================

// --- User and Address Models ---

model User {
  id                     String              @id @default(uuid()) // المعرف الفريد للمستخدم
  email                  String              @unique // البريد الإلكتروني (فريد)
  password               String
  username               String? // اسم المستخدم (اختياري)
  role                   UserRole            @default(USER) // دور المستخدم
  avatar                 String? // رابط الصورة الرمزية (اختياري)
  gender                 String? // جنس المستخدم (اختياري)
  birthDate              DateTime? // تاريخ الميلاد
  refreshToken           String?             @unique // رمز التحديث للمستخدم
  resetToken             String?             @unique // رمز الإسترجاع للمستخدم
  resetTokenExpiresAt    DateTime? // تاريخ انتهاء صلاحية رمز الإسترجاع
  rememberToken          Boolean?            @default(false) // رمز التذكر للمستخدم
  rememberTokenExpiresAt DateTime? // تاريخ انتهاء صلاحية رمز التذكر
  termsAgreed            Boolean             @default(false) // الموافقة على الشروط والأحكام
  createdAt              DateTime            @default(now()) // تاريخ إنشاء الحساب
  updatedAt              DateTime            @updatedAt // تاريخ آخر تحديث للحساب
  Address                Address? // علاقة مع ملف المستخدم الشخصي
  reviews                Review[] // قائمة المراجعات التي كتبها المستخدم
  carts                  Cart[] // قائمة عربات التسوق الخاصة بالمستخدم
  orders                 Order[] // قائمة الطلبات التي قام بها المستخدم
  notifications          Notification[]      @relation("UserNotifications")
  sentNotifications      Notification[]      @relation("SenderNotifications")
  wishlists              Wishlist[]
  compares               Compare[]
  blogPosts              BlogPost[]
  adminLogs              AdminLog[]
  
  replies                Reply[]
  emailVerifications     EmailVerification[]
  coupons                Coupon[]
  
  // --- علاقات التقارير ---
  customerReports        CustomerReport[]    @relation("CustomerReportReporter")
  reviewedCustomerReports CustomerReport[]   @relation("CustomerReportReviewer")
  adminReports           AdminReport[]       @relation("AdminReportCreator")
  relatedAdminReports    AdminReport[]       @relation("AdminReportRelatedUser")
  assignedAdminReports   AdminReport[]       @relation("AdminReportAssignee")
  analyticalReports      AnalyticalReport[]  @relation("AnalyticalReportGenerator")

}

// --- Banner Model ---

model Banner {
  id         String      @id @default(cuid())
  title      String
  subtitle   String?
  imageUrl   String
  linkUrl    String? // رابط اختياري عند الضغط على البانر
  buttonText String? // نص الزر
  type       BannerType? // "MAIN", "PRODUCT", "SALE", etc.
  isActive   Boolean     @default(true)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

// --- Email Verification Model ---
model EmailVerification {
  id        String   @id @default(uuid()) // المعرف الفريد للملف الشخصي
  newEmail  String   @unique // البريد الإلكتروني الجديد (فريد)
  code      String   @unique // رمز التحقق
  expiresAt DateTime // تاريخ انتهاء صلاحية رمز التحقق
  user      User     @relation(fields: [userId], references: [id]) // علاقة مع المستخدم
  userId    String   @unique // مفتاح خارجي لربط الملف الشخصي بالمستخدم

  createdAt DateTime @default(now()) // تاريخ إنشاء الملف الشخصي
  updatedAt DateTime @updatedAt // تاريخ آخر تحديث للملف الشخصي
}

enum AddressType {
  HOME
  OFFICE
  OTHER
}

model Address {
  id             String       @id @default(uuid()) // المعرف الفريد للملف الشخصي
  fullName       String? // الاسم الكامل
  phone          String? // رقم الهاتف المحمول
  addressLineOne String? // العنوان
  addressLineTwo String? // العنوان
  city           String? // المدينة
  addressType    AddressType? @default(HOME) // الولاية/المقاطعة  (اختياري) افتراضيا يكون HOME
  zipCode        String? // الرمز البريدي
  country        String? // البلد
  isDefault      Boolean?     @default(false) // هل هذا العنوان هو الافتراضي؟
  createdAt      DateTime     @default(now()) // تاريخ إنشاء الملف الشخصي
  updatedAt      DateTime     @updatedAt // تاريخ آخر تحديث للملف الشخصي
  user           User         @relation(fields: [userId], references: [id]) // علاقة مع المستخدم
  userId         String       @unique // مفتاح خارجي لربط الملف الشخصي بالمستخدم
}

// --- Product and Catalog Models ---

model Category {
  id       Int        @id @default(autoincrement()) // المعرف الفريد للفئة
  name     String     @unique // اسم الفئة (فريد)
  products Product[] // قائمة المنتجات ضمن هذه الفئة
  coupons  Coupon[]
  BlogPost BlogPost[]
}

// --- Product and Type Models ---

model ProductType {
  id       Int       @id @default(autoincrement()) // المعرف الفريد للنوع
  name     String    @unique // اسم النوع (فريد)
  products Product[] // قائمة المنتجات ضمن هذا النوع
  Coupon   Coupon[]
}

model FlashSale {
  id        String   @id @default(uuid()) // المعرف الفريد للخصم
  discount  Decimal // نسبة الخصم أو المبلغ
  startDate DateTime // تاريخ بدء الخصم
  endDate   DateTime // تاريخ انتهاء الخصم
  productId String   @unique // مفتاح خارجي لربط الخصم بالمنتج
  product   Product  @relation(fields: [productId], references: [id])
  price     Decimal // السعر الحالي بعد الخصم
  createdAt DateTime @default(now()) // تاريخ إنشاء الخصم
  updatedAt DateTime @updatedAt // تاريخ آخر تحديث للخصم
}

model Product {
  id                String           @id @default(uuid()) // المعرف الفريد للمنتج
  name              String // اسم المنتج
  description       String // وصف المنتج
  aboutProduct      String[] // وصف المنتج
  price             Decimal // السعر الحالي
  originPrice       Decimal // السعر الأصلي
  slug              String           @unique // رابط فريد للمنتج
  type              ProductType?     @relation(fields: [typeId], references: [id]) // نوع المنتج
  typeId            Int? // مفتاح خارجي لربط المنتج بالنوع
  gender            Gender // الفئة الجنسية للمنتج
  brand             String // العلامة التجارية
  thumbImage        String // صور مصغرة للمنتج
  images            String[] // صور المنتج
  isSale            Boolean          @default(false) // هل المنتج في التخفيضات؟
  isFlashSale       Boolean          @default(false) // هل المنتج في التخفيضات الفورية؟
  isNew             Boolean          @default(false) // هل المنتج جديد؟
  isWishlist        Boolean?         @default(false) // هل المنتج في المفضلة؟
  isCompare         Boolean?         @default(false) // هل المنتج في المقارنة؟
  isActive          Boolean          @default(true) // هل المنتج متاح للعرض؟
  isFeatured        Boolean          @default(false) // هل المنتج مميز؟
  rate              Float            @default(0) // متوسط تقييم المنتج
  sold              Int              @default(0) // عدد القطع المباعة
  quantityPurchase  Int              @default(0) // عدد مرات الشراء
  views             Int              @default(0) // عدد المشاهدات
  action            String? // إجراء خاص بالمنتج (اختياري)
  weight            Decimal? // الوزن المحدد للمنتج
  dimensions        String? // الأبعاد (طول × عرض × ارتفاع)
  sizes             String[] // حجم المنتج
  colors            String[] // لون المنتج
  tags              String[] // الكلمات المفتاحية للمنتج
  sku               String?          @unique // رمز المنتج الفريد
  barcode           String? // الباركود
  minimumOrderQty   Int              @default(1) // الحد الأدنى لكمية الطلب
  maximumOrderQty   Int? // الحد الأقصى لكمية الطلب
  metaTitle         String? // عنوان SEO
  metaDescription   String? // وصف SEO
  metaKeywords      String[] // كلمات مفتاحية SEO
  createdAt         DateTime         @default(now()) // تاريخ إضافة المنتج
  updatedAt         DateTime         @updatedAt // تاريخ آخر تحديث للمنتج
  category          Category         @relation(fields: [categoryId], references: [id]) // علاقة مع الفئة
  categoryId        Int // مفتاح خارجي لربط المنتج بالفئة
  variants          ProductVariant[] // قائمة متغيرات المنتج
  reviews           Review[] // قائمة مراجعات المنتج
  cartItems         CartItem[] // قائمة عناصر عربة التسوق المرتبطة بالمنتج
  orderItems        OrderItem[] // قائمة عناصر الطلبات المرتبطة بالمنتج
  flashSale         FlashSale? // علاقة مع الخصم الفوري
  inventory         Inventory?
  wishlists         Wishlist[]
  compares          Compare[]
  excludedByCoupons Coupon[]         @relation("ExcludedProducts")

  // فهارس لتحسين الأداء
  @@index([categoryId])
  @@index([typeId])
  @@index([brand])
  @@index([isSale])
  @@index([isNew])
  @@index([isActive])
  @@index([isFeatured])
  @@index([createdAt])
  @@index([sold])
  @@index([rate])
  @@index([views])
}

// --- Inventory Model ---

model Inventory {
  id                String   @id @default(uuid())
  productId         String   @unique
  quantity          Int
  lowStockThreshold Int? // <--- أضف هذا السطر (اجعله اختياريًا إذا أردت)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  product           Product  @relation(fields: [productId], references: [id])
}

model ProductVariant {
  id        Int        @id @default(autoincrement()) // المعرف الفريد للمتغير
  colorName String? // اسم اللون
  color     String // اللون
  colorCode String // كود اللون (HEX)
  image     String // صورة المتغير
  size      String // حجم المتغير
  quantity  Int // الكمية المتاحة لهذا المتغير
  productId String
  product   Product    @relation(fields: [productId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItems CartItem[]

  @@unique([productId, colorCode, size])
}

// --- Review and Blog Models ---

model Review {
  id        Int      @id @default(autoincrement()) // المعرف الفريد للمراجعة
  rate      Int // التقييم (من 1 إلى 5)
  message   String // نص المراجعة
  color     String // لون المنتج
  size      String // حجم المنتج
  likes     Int      @default(0) // عدد الإعجابات
  createdAt DateTime @default(now()) // تاريخ إنشاء المراجعة
  updatedAt DateTime @updatedAt // تاريخ آخر تحديث للمراجعة
  user      User     @relation(fields: [userId], references: [id])
  userId    String // مفتاح خارجي للمستخدم
  product   Product  @relation(fields: [productId], references: [id])
  productId String // مفتاح خارجي للمنتج
  reply     Reply? // الرد على المراجعة
}

model Reply {
  id        Int      @id @default(autoincrement()) // المعرف الفريد للرد
  message   String // نص الرد
  createdAt DateTime @default(now()) // تاريخ إنشاء الرد
  updatedAt DateTime @updatedAt // تاريخ آخر تحديث للرد
  review    Review   @relation(fields: [reviewId], references: [id])
  reviewId  Int      @unique // مفتاح خارجي للمراجعة
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

// --- Notification Model ---
model Notification {
  id          String           @id @default(uuid())
  userId      String // المستلم
  senderId    String? // المرسل (لإشعارات مثل "قام X بمتابعتك")
  title       String // عنوان الإشعار
  message     String // المحتوى
  type        NotificationType // ORDER, PROMOTION, SYSTEM, etc.
  isRead      Boolean          @default(false)
  isDeleted   Boolean          @default(false) // للإخفاء دون حذف
  metadata    Json?            @db.Json // بيانات إضافية
  relatedId   String? // ID للعنصر المرتبط (طلب، منتج، etc.)
  relatedType String? // نوع العنصر المرتبط
  createdAt   DateTime         @default(now())
  readAt      DateTime? // وقت القراءة

  user   User  @relation("UserNotifications", fields: [userId], references: [id])
  sender User? @relation("SenderNotifications", fields: [senderId], references: [id])

  @@index([userId, isRead])
}

// --- Report Model ---


// --- Customer Report Model ---
model CustomerReport {
  id            String              @id @default(uuid())
  reporterId    String              // معرف العميل الذي أنشأ التقرير
  type          CustomerReportType  // نوع التقرير (FEEDBACK, BUG_REPORT, etc.)
  title         String              // عنوان التقرير
  description   String              // وصف التقرير
  priority      ReportPriority      @default(MEDIUM) // أولوية التقرير
  status        ReportStatus        @default(PENDING) // حالة التقرير
  
  // معلومات الهدف (إذا كان التقرير عن شيء محدد)
  targetId      String?             // معرف الهدف (منتج، طلب، إلخ)
  targetType    String?             // نوع الهدف (product, order, user, etc.)
  
  // معلومات المراجعة
  reviewedBy    String?             // معرف الموظف الذي راجع التقرير
  reviewedAt    DateTime?           // تاريخ المراجعة
  response      String?             // رد الموظف على التقرير
  
  // معلومات إضافية
  attachments   String[]            // مرفقات (صور، ملفات)
  metadata      Json?               @db.Json // معلومات إضافية
  
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  
  // العلاقات
  reporter      User                @relation("CustomerReportReporter", fields: [reporterId], references: [id])
  reviewer      User?               @relation("CustomerReportReviewer", fields: [reviewedBy], references: [id])
  
  @@index([reporterId, status])
  @@index([type, createdAt])
  @@index([status, priority])
}

// --- Admin Report Model ---
model AdminReport {
  id            String            @id @default(uuid())
  createdBy     String            // معرف الموظف الذي أنشأ التقرير
  type          AdminReportType   // نوع التقرير (INVENTORY_ISSUE, SUPPLIER_ISSUE, etc.)
  title         String            // عنوان التقرير
  description   String            // وصف التقرير
  priority      ReportPriority    @default(MEDIUM) // أولوية التقرير
  status        ReportStatus      @default(OPEN) // حالة التقرير
  
  // معلومات الهدف
  relatedUserId String?           // معرف المستخدم المرتبط (إن وجد)
  relatedOrderId String?          // معرف الطلب المرتبط (إن وجد)
  relatedProductId String?        // معرف المنتج المرتبط (إن وجد)
  
  // معلومات المعالجة
  assignedTo    String?           // معرف الموظف المكلف بالمعالجة
  assignedAt    DateTime?         // تاريخ التكليف
  resolvedAt    DateTime?         // تاريخ الحل
  
  // معلومات إضافية
  attachments   String[]          // مرفقات
  tags          String[]          // علامات للتصنيف
  metadata      Json?             @db.Json // معلومات إضافية  
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  
  // العلاقات
  creator       User              @relation("AdminReportCreator", fields: [createdBy], references: [id])
  relatedUser   User?             @relation("AdminReportRelatedUser", fields: [relatedUserId], references: [id])
  assignee      User?             @relation("AdminReportAssignee", fields: [assignedTo], references: [id])
  
  @@index([createdBy, status])
  @@index([type, createdAt])
  @@index([status, priority])
  @@index([assignedTo, status])
}

// --- Analytical Report Model ---
model AnalyticalReport {
  id            String                @id @default(uuid())
  name          String                // اسم التقرير المعروض
  reportType    AnalyticalReportType  // SALES, INVENTORY, USER_ACTIVITY, etc.
  format        FileFormat            @default(JSON) // JSON, CSV, PDF, etc.
  data          Json                  @db.Json // بيانات التقرير
  status        JobStatus             @default(COMPLETED) // PENDING, PROCESSING, COMPLETED, FAILED
  filters       Json?                 @db.Json // معايير التصفية المستخدمة
  generatedBy   String                // ID المستخدم/النظام الذي أنشأ التقرير
  downloadUrl   String?               // رابط التحميل للتقرير الكبير
  expiresAt     DateTime?             // تاريخ انتهاء صلاحية التقرير
  
  // معلومات الجدولة
  isScheduled   Boolean               @default(false) // هل التقرير مجدول؟
  scheduleConfig Json?                @db.Json // إعدادات الجدولة
  nextRunAt     DateTime?             // التشغيل التالي
  
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  
  // العلاقات
  generator     User                  @relation("AnalyticalReportGenerator", fields: [generatedBy], references: [id])
  
  @@index([reportType, createdAt])
  @@index([status, generatedBy])
  @@index([isScheduled, nextRunAt])
}



// --- Coupon Model ---

model Coupon {
  id               String       @id @default(uuid())
  code             String       @unique
  description      String? // وصف للكوبون (عرضه في الواجهة)
  discountType     DiscountType @default(PERCENTAGE)
  discountValue    Decimal      @db.Decimal(10, 2)
  maxDiscount      Decimal?     @db.Decimal(10, 2) // أقصى خصم (للكوبونات النسبية)
  startDate        DateTime
  endDate          DateTime
  isActive         Boolean      @default(true)
  isPublic         Boolean      @default(true) // هل الكوبون متاح للجميع؟
  usedCount        Int          @default(0)
  maxUsage         Int? // الحد الأقصى للاستخدام (null = غير محدود)
  maxUsagePerUser  Int          @default(1) // الحد الأقصى للاستخدام لكل مستخدم
  minOrderValue    Decimal      @default(0) @db.Decimal(12, 2)
  applicableTo     ProductType? @relation(fields: [productTypeId], references: [id]) // يمكن تحديد نوع منتجات معينة
  categories       Category[] // فئات المنتجات المنطبقة عليها
  excludedProducts Product[]    @relation("ExcludedProducts") // منتجات مستثناة
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  orders           Order[]
  users            User[] // مستخدمون محددون للكوبون
  productTypeId    Int?
  Cart             Cart[]
}

// --- E-commerce Models (Cart, Order) ---
model Cart {
  id                String                @id @default(uuid())
  sessionId         String? // لغير المسجلين
  totalItems        Int                   @default(0) // عدد العناصر الإجمالي
  subtotal          Decimal               @default(0) @db.Decimal(12, 2) // المجموع قبل الخصومات والضرائب
  taxAmount         Decimal               @default(0) @db.Decimal(12, 2) // قيمة الضرائب
  shippingAmount    Decimal               @default(0) @db.Decimal(12, 2) // تكلفة الشحن
  discountAmount    Decimal               @default(0) @db.Decimal(12, 2)
  total             Decimal               @default(0) @db.Decimal(12, 2)
  currency          String                @default("USD") // عملة الدفع
  status            CartStatus            @default(ACTIVE) // ACTIVE, ABANDONED, CONVERTED
  paymentMethod     PaymentMethod?        @default(PAYPAL) // طريقة الدفع المختارة
  shippingMethod    ShippingMethodStatus? // طريقة الشحن المختارة
  estimatedDelivery String? // تقدير وقت التوصيل
  notes             String? // ملاحظات العميل
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  expiresAt         DateTime? // تاريخ انتهاء صلاحية العربة

  // العلاقات
  user            User?      @relation(fields: [userId], references: [id])
  userId          String?
  coupon          Coupon?    @relation(fields: [couponId], references: [id])
  couponId        String?
  cartItems       CartItem[]
  shippingAddress Json?      @db.Json // عنوان الشحن المختار
}

// --- Cart Item Model ---
model CartItem {
  id            String   @id @default(uuid())
  quantity      Int      @default(1)
  originalPrice Decimal  @db.Decimal(12, 2) // السعر الأصلي للمنتج
  salePrice     Decimal  @db.Decimal(12, 2) // السعر بعد الخصم (إن وجد)
  price         Decimal  @db.Decimal(12, 2) // السعر الفعلي (قد يكون original أو sale)
  totalPrice    Decimal  @db.Decimal(12, 2) // السعر × الكمية
  isGift        Boolean  @default(false) // هل العنصر هدية؟
  giftMessage   String? // رسالة الهدية
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // العلاقات
  cart      Cart            @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product         @relation(fields: [productId], references: [id])
  productId String
  variant   ProductVariant? @relation(fields: [variantId], references: [id])
  variantId Int?

  // معلومات إضافية محفوظة
  productName  String // اسم المنتج وقت الإضافة
  productImage String? // صورة المنتج الرئيسية
  productSlug  String // رابط المنتج
  sku          String? // كود المخزون
  stock        Int? // الكمية المتاحة وقت الإضافة

  // خصائص المتغير
  color      String?
  size       String?
  weight     Decimal? @db.Decimal(10, 2)
  dimensions Json?    @db.Json // {length, width, height}

  // خيارات إضافية
  customization Json? @db.Json // تخصيصات إضافية
}

// --- Order Model ---
model Order {
  id          String      @id @default(uuid())
  orderNumber String      @unique // رقم طلب يمكن قراءته بواسطة الإنسان
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  orderItems  OrderItem[]

  // Pricing
  itemsPrice     Decimal @db.Decimal(12, 2) // سعر المنتجات فقط
  shippingPrice  Decimal @db.Decimal(12, 2) // سعر الشحن
  taxPrice       Decimal @db.Decimal(12, 2) // الضرائب
  discountAmount Decimal @db.Decimal(12, 2) // إجمالي الخصم
  totalAmount    Decimal @db.Decimal(12, 2) // المبلغ النهائي

  // Payment
  paymentMethod String // COD, CreditCard, PayPal, etc.
  paymentStatus PaymentStatus @default(PENDING) // PENDING, PAID, FAILED, REFUNDED
  paymentResult Json?         @db.Json // تفاصيل الاستجابة من بوابة الدفع
  transactionId String? // معرّف المعاملة من بوابة الدفع

  // Shipping
  shippingAddress Json                 @db.Json // {address, city, postalCode, country}
  shippingMethod  ShippingMethodStatus @default(STANDARD) // STANDARD, EXPRESS
  shippingStatus  ShippingStatus       @default(PENDING) // PENDING, PROCESSING, SHIPPED, DELIVERED
  trackingNumber  String?
  trackingUrl     String?

  // Status
  orderStatus OrderStatus @default(PENDING) // PENDING, CONFIRMED, CANCELLED, COMPLETED
  isDelivered Boolean     @default(false)
  deliveredAt DateTime?

  // Coupon
  coupon     Coupon? @relation(fields: [couponId], references: [id])
  couponId   String?
  couponCode String? // حفظ كود الخصم حتى لو تم حذف الكوبون

  // Metadata
  notes      String? // ملاحظات إضافية من العميل
  adminNotes String? // ملاحظات إدارية
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  shipment       Shipment[]
  refund         Refund[]
  Payment        Payment[]
  PaymentSession PaymentSession?
}

model OrderItem {
  id          String  @id @default(uuid())
  order       Order   @relation(fields: [orderId], references: [id])
  orderId     String
  product     Product @relation(fields: [productId], references: [id])
  productId   String
  productName String // حفظ اسم المنتج وقت الطلب
  productSlug String // حفظ رابط المنتج
  image       String // صورة المنتج وقت الطلب
  price       Decimal @db.Decimal(12, 2) // السعر وقت الطلب
  quantity    Int     @default(1)

  // Variants
  color  String?
  size   String?
  weight Decimal? @db.Decimal(10, 2)
  sku    String? // كود المخزون

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// --- Payment Session Model ---
model PaymentSession {
  id             String        @id @default(uuid())
  orderId        String        @unique
  paymentMethod  PaymentMethod
  amount         Decimal       @db.Decimal(12, 2)
  currency       String        @default("USD")
  status         PaymentStatus @default(PENDING)
  sessionId      String? // Stripe Session ID
  paypalOrderId  String? // PayPal Order ID
  googlePayToken String? // Google Pay Token
  clientSecret   String? // Stripe Client Secret
  metadata       Json?         @db.Json // Additional payment metadata
  expiresAt      DateTime
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  order Order @relation(fields: [orderId], references: [id])

  @@index([orderId, status])
}

// --- Payment Model ---
model Payment {
  id             String        @id @default(uuid())
  order          Order         @relation(fields: [orderId], references: [id])
  orderId        String
  amount         Decimal       @db.Decimal(12, 2)
  currency       String        @default("USD")
  paymentMethod  PaymentMethod // CREDIT_CARD, PAYPAL, etc.
  provider       String? // "Stripe", "PayPal", etc.
  status         PaymentStatus
  transactionId  String?
  receiptUrl     String? // رابط إيصال الدفع
  refundedAmount Decimal       @default(0) @db.Decimal(12, 2)
  paymentDetails Json?         @db.Json // تفاصيل الدفع الكاملة
  createdAt      DateTime      @default(now())
  processedAt    DateTime? // وقت اكتمال الدفع/الرفض
  Refund         Refund[]

  @@index([orderId, status])
}

// --- Shipment Model ---
model Shipment {
  id               String         @id @default(uuid())
  order            Order          @relation(fields: [orderId], references: [id])
  orderId          String
  trackingNumber   String
  carrier          Carrier // DHL, FedEx, etc.
  service          String? // "Express", "Standard", etc.
  status           ShipmentStatus
  shippingDate     DateTime?
  deliveredAt      DateTime?
  estimatedArrival DateTime?
  trackingUrl      String?
  shippingLabel    String? // رابط ملصق الشحن
  weight           Decimal?       @db.Decimal(10, 2) // الوزن الكلي
  dimensions       String? // الأبعاد "20x30x15 cm"
  cost             Decimal?       @db.Decimal(10, 2) // تكلفة الشحن الفعلية
  address          Json           @db.Json // عنوان الشحن (نسخة عند الشحن)
  items            Json           @db.Json // قائمة العناصر المشحونة

  @@index([orderId, trackingNumber])
}

// --- Refund Model ---
model Refund {
  id          String       @id @default(uuid())
  order       Order        @relation(fields: [orderId], references: [id])
  orderId     String
  payment     Payment?     @relation(fields: [paymentId], references: [id])
  paymentId   String?
  amount      Decimal      @db.Decimal(12, 2)
  reason      RefundReason
  description String?
  status      RefundStatus
  processedBy String? // ID المسؤول عن المعالجة
  processedAt DateTime?
  method      RefundMethod // ORIGINAL, CREDIT, etc.
  createdAt   DateTime     @default(now())

  @@index([orderId, status])
}

// --- Wishlist Model ---

model Wishlist {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@unique([userId, productId])
}

// --- Compare Model ---
model Compare {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@unique([userId, productId])
}

// --- Blog Model ---
model BlogPost {
  id          String     @id @default(uuid())
  title       String
  slug        String     @unique
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  tags        String[]
  content     Json       @db.Json // المحتوى المنظم (للمحرر المرئي)
  excerpt     String? // ملخص المقال
  featured    Boolean    @default(false)
  status      PostStatus @default(DRAFT)
  seoTitle    String?
  seoDesc     String?
  seoKeywords String?
  images      Json?      @db.Json // {thumbnail, cover, gallery}
  views       Int        @default(0)
  publishedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([slug, status, publishedAt])
}

// --- Admin Log Model ---

model AdminLog {
  id        String   @id @default(uuid())
  admin     User     @relation(fields: [adminId], references: [id])
  adminId   String
  action    String
  target    String
  createdAt DateTime @default(now())
}


